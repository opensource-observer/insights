name: Tutorial Automation
description: |
  Automates the process of uploading Jupyter notebooks to Google Colab,
  embedding Colab links, converting notebooks to MDX, and creating PRs
  in the oso repository.

on:
  workflow_dispatch:
    inputs:
      command:
        description: "upload → add Colab link to .ipynb  |  push → convert to MDX & PR to oso repo"
        required: true
        type: choice
        options: [upload, push]
      notebook:
        description: "Path (relative to repo root) to the .ipynb you want to process"
        required: true

permissions:
  contents: write          # commit back to this repo
  pull-requests: write     # create / update a PR in the oso repo

jobs:
  # Upload notebook to Colab
  upload-to-colab:
    if: inputs.command == 'upload'
    runs-on: ubuntu-latest
    environment: deploy
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      COLAB_FOLDER_ID:    ${{ vars.COLAB_FOLDER_ID }}
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: '3.10' }

    - name: Install deps
      run: |
        pip install google-api-python-client \
                    google-auth google-auth-httplib2 google-auth-oauthlib

    - name: Upload & embed Colab link
      run: |
        python scripts/embed_colab_link.py \
          --notebook "${{ inputs.notebook }}" \
          --folder   "$COLAB_FOLDER_ID"

    - name: Commit updated notebook
      run: |
        git config user.name  "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add "${{ inputs.notebook }}"
        git commit -m "chore: embed Colab link in ${{ inputs.notebook }}" || echo "No changes to commit"
        git push
  
  # Convert → MDX → PR to oso repo
  send-pull-requests:
    if: inputs.command == 'push'
    runs-on: ubuntu-latest
    environment: deploy
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      COLAB_FOLDER_ID:    ${{ vars.COLAB_FOLDER_ID }}
      GEMINI_API_KEY:     ${{ secrets.GEMINI_API_KEY }}
      TARGET_PAT:         ${{ secrets.TARGET_PAT }}
      NOTEBOOKS:          ${{ inputs.notebook }}
    steps:
    - uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    - uses: actions/setup-python@v5
      with: { python-version: '3.10' }

    - uses: actions/setup-node@v4
      with: { node-version: '20.x' }

    - name: Install deps
      run: |
        pip install nbconvert \
                   google-api-python-client \
                   google-auth google-auth-httplib2 google-auth-oauthlib \
                   google-genai
        npm install --global prettier

    - name: Upload notebook & convert to MDX
      run: |
        python scripts/nb_to_mdx.py \
          --notebook "$NOTEBOOKS" \
          --folder   "$COLAB_FOLDER_ID" \
          --outdir   "mdx_build"

    - name: Strip HTML from MDX
      run: python scripts/sanitize_mdx_html.py mdx_build

    - name: Add MDX front-matter / imports
      run: python scripts/add_mdx_header.py mdx_build/apps/docs/docs/tutorials

    - name: Format with Prettier
      run: npx prettier --write "mdx_build/apps/docs/docs/tutorials/**/*.mdx"

    - name: Update tutorials index with Gemini
      run: python scripts/update_tutorial_index.py

    - name: Checkout oso repo
      uses: actions/checkout@v4
      with:
        repository: opensource-observer/oso
        token: ${{ secrets.TARGET_PAT }}
        path:   oso
        fetch-depth: 0

    - name: Copy new MDX files into oso repo
      run: |
        mkdir -p oso/apps/docs/docs/tutorials
        rsync -a mdx_build/apps/docs/docs/tutorials/ \
              oso/apps/docs/docs/tutorials/
        rsync -a mdx_build/apps/docs/docs/tutorials/index.* \
              oso/apps/docs/docs/tutorials/

    - name: Create or update PR
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.TARGET_PAT }}
        path:  oso
        branch: auto/tutorial-mdx-${{ github.run_id }}
        base: main
        title: "Add MDX tutorial(s) - run ${{ github.run_id }}"
        commit-message: |
          docs: add auto-generated MDX tutorial(s)
        body: |
          Auto-generated MDX files from **${{ github.repository }}**.
