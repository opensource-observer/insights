name: Upload Notebook → Colab → MDX → PR to oso repo

on:
  push:
    branches: [main]                       # only after PRs merge to main
    paths:
      - "tutorials/data-science/**/*.ipynb"  # notebooks to watch

permissions:
  contents: write
  pull-requests: write

jobs:
  process:
    runs-on: ubuntu-latest
    environment: deploy
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      COLAB_FOLDER_ID:    ${{ vars.COLAB_FOLDER_ID }}
      GEMINI_API_KEY:     ${{ secrets.GEMINI_API_KEY }}

    steps:
    - uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    - uses: actions/setup-python@v5
      with: { python-version: "3.10" }

    - name: Install deps
      run: |
        pip install nbconvert \
                   google-api-python-client \
                   google-auth google-auth-httplib2 google-auth-oauthlib \
                   google-genai

    #  list notebooks modified in this push
    - name: Find notebooks changed in this push
      id: list
      run: |
        NOTEBOOKS=$(git diff --name-only --diff-filter=AM \
          ${{ github.event.before }} ${{ github.sha }} \
          | grep '\.ipynb$' || true)
        echo "notebooks<<EOF" >> $GITHUB_OUTPUT
        echo "$NOTEBOOKS"        >> $GITHUB_OUTPUT
        echo "EOF"               >> $GITHUB_OUTPUT

    # upload each notebook to colab + build MDX files 
    - name: Upload & convert to MDX
      run: |
        mkdir -p mdx_build
        while read -r NB; do
          [ -z "$NB" ] && continue
          echo "Processing $NB"

          BASENAME="$(basename "$NB" .ipynb)"

          # Upload to Drive → Colab link
          LINK=$(python scripts/upload_to_drive.py "$NB" --folder "$COLAB_FOLDER_ID")

          # ipynb → markdown
          jupyter nbconvert "$NB" --to markdown --output "$BASENAME"

          MARKDOWN_PATH="$(dirname "$NB")/$BASENAME.md"
          MDX_OUT="mdx_build/${BASENAME}.mdx"

          printf '<a href="%s" target="_blank">Open in Colab</a>\n\n' "$LINK" >  "$MDX_OUT"
          cat "$MARKDOWN_PATH" >> "$MDX_OUT"
        done <<< "${{ steps.list.outputs.notebooks }}"

        # Stage into the folder structure that must exist in oso repo
        mkdir -p mdx_build/apps/docs/docs/tutorials
        mv mdx_build/*.mdx mdx_build/apps/docs/docs/tutorials/

    # grab the current index.md from oso repo 
    - name: Update tutorials index with Gemini
      env:
        TARGET_PAT: ${{ secrets.TARGET_PAT }}      # passed to the script
      run: |
        python scripts/update_tutorial_index.py

    # open a PR in the oso repo with those MDX files 
    - name: Open PR in oso repo
      uses: peter-evans/create-pull-request@v7
      with:
        token:      ${{ secrets.TARGET_PAT }}      # PAT w/ push rights to the oso repo
        repository: opensource-observer/oso             
        base:       main                          # PR base branch in oso
        branch:     auto/tutorial-mdx-${{ github.run_id }}
        commit-message: "docs: add auto-generated MDX tutorial(s)"
        title: "Add MDX tutorial(s) - run ${{ github.run_id }}"
        body: |
          Auto-generated MDX files created from notebooks merged into **${{ github.repository }}**.
          Please review; oso-repo CI must pass before merge.
        path: mdx_build                           # directory containing the staged change set
        add-paths: |
          apps/docs/docs/tutorials/*.mdx           # the actual files to stage/commit
          apps/docs/docs/tutorials/index.md
        author-name:  github-actions
        author-email: github-actions@github.com